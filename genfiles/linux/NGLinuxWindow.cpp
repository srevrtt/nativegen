// Generated by NativeGen v0.1.0

#include <iostream>
#include "include/NGLinuxWindow.hpp"

#define IDENTIFIER "com.nativegen.nativegen"

GtkWidget *window;
unsigned int windowWidth = 400;
unsigned int windowHeight = 400;
std::string windowTitle = "NativeGen Default Title";

// Create a GTK window
void NGLinuxWindow::onActivate(GtkApplication *app)
{
  window = gtk_window_new(GTK_WINDOW_TOPLEVEL);

  gtk_window_set_title(GTK_WINDOW(window), windowTitle.c_str());
  gtk_window_set_default_size(GTK_WINDOW(window), windowWidth, windowHeight);

  g_signal_connect(window, "destroy", gtk_main_quit, nullptr);
  gtk_widget_show_all(window);
}

// Creates a new Linux GTK window
NGLinuxWindow::NGLinuxWindow()
{
  app = gtk_application_new(IDENTIFIER, G_APPLICATION_FLAGS_NONE);
  g_signal_connect(app, "activate", G_CALLBACK(onActivate), nullptr);

  // Create a "fake" argv for convience for the developer
  char *fakeArgv[] = { (char*)windowTitle.c_str() };
  g_application_run(G_APPLICATION(app), 1, fakeArgv);
}

// Runs the Linux GTK window
void NGLinuxWindow::run()
{
  gtk_main();
}
